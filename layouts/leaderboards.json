{
  "b": 24,
  "disableInputWhenNotFocused": true,
  "mangledName": "leaderboards",
  "name": "leaderboards",
  "r": 24,
  "standardSortMethod": true,
  "stopSoundsOnStartup": true,
  "title": "",
  "v": 24,
  "uiSettings": {
    "grid": false,
    "gridType": "rectangular",
    "gridWidth": 32,
    "gridHeight": 32,
    "gridOffsetX": 0,
    "gridOffsetY": 0,
    "gridColor": 10401023,
    "gridAlpha": 0.8,
    "snap": false,
    "zoomFactor": 1.1306316110252639,
    "windowMask": false
  },
  "objectsGroups": [],
  "variables": [],
  "instances": [
    {
      "angle": 0,
      "customSize": false,
      "height": 0,
      "layer": "PrompLayer",
      "name": "PrompText",
      "persistentUuid": "9aef4516-78bb-4824-a81e-3c504348af81",
      "width": 0,
      "x": 52,
      "y": 80,
      "zOrder": 1,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "depth": 32,
      "height": 64,
      "layer": "PrompLayer",
      "name": "Login",
      "persistentUuid": "b5f7ffab-4332-4378-95ce-dfde1f6f4b0a",
      "width": 160,
      "x": 96,
      "y": 192,
      "zOrder": 5,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "depth": 32,
      "height": 64,
      "layer": "PrompLayer",
      "name": "Guest",
      "persistentUuid": "60516da1-b966-48c8-bb8c-96f652269e41",
      "width": 160,
      "x": 384,
      "y": 192,
      "zOrder": 6,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "depth": 0,
      "height": 30,
      "layer": "guestInfoLayerNOTUSEDANYMORE",
      "name": "GuestName",
      "persistentUuid": "b067efd8-0e57-4f64-9efa-ba422f29b57b",
      "width": 416,
      "x": 96,
      "y": 128,
      "zOrder": 7,
      "numberProperties": [],
      "stringProperties": [
        {
          "name": "initialValue",
          "value": ""
        }
      ],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": false,
      "height": 0,
      "layer": "guestInfoLayerNOTUSEDANYMORE",
      "name": "GuestText",
      "persistentUuid": "0f31968d-6037-42e3-b502-2057ec985701",
      "width": 0,
      "x": 233,
      "y": 15,
      "zOrder": 8,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "depth": 32,
      "height": 37,
      "layer": "guestInfoLayerNOTUSEDANYMORE",
      "name": "DontRemoveOrAdd",
      "persistentUuid": "cff056ef-6e10-43f4-a7f1-1cb9b00e42fa",
      "width": 96,
      "x": 256,
      "y": 251,
      "zOrder": 9,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "depth": 0,
      "height": 43,
      "layer": "",
      "name": "Username",
      "persistentUuid": "7181c589-0beb-4c93-999c-ba43de935b33",
      "width": 625,
      "x": 6,
      "y": 6,
      "zOrder": 11,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "depth": 0,
      "height": 29,
      "layer": "",
      "name": "Scores",
      "persistentUuid": "2956af62-4c99-49b6-9c5c-a28eb426d349",
      "width": 620,
      "x": 10,
      "y": 57,
      "zOrder": 12,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": false,
      "height": 0,
      "layer": "",
      "name": "LogOut",
      "persistentUuid": "edbee3f6-87e8-4ffb-ad2c-994a10975f29",
      "width": 0,
      "x": 293,
      "y": 343,
      "zOrder": 13,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": false,
      "height": 0,
      "layer": "",
      "name": "showlb",
      "persistentUuid": "c70abf3d-fcdc-49a7-ae8a-c463a2702abf",
      "width": 0,
      "x": 201,
      "y": 153,
      "zOrder": 14,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": false,
      "height": 0,
      "layer": "",
      "name": "uploadscore",
      "persistentUuid": "1a24b09f-c38a-445e-a42e-e60378c4b2b0",
      "width": 0,
      "x": 249,
      "y": 219,
      "zOrder": 15,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    }
  ],
  "objects": [
    {
      "assetStoreId": "",
      "bold": false,
      "italic": false,
      "name": "PrompText",
      "smoothed": true,
      "tags": "",
      "type": "TextObject::Text",
      "underlined": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "string": "Hold on! You havent logged in to gd.games\nLogin? or continue as a guest?",
      "font": "Kenney Mini Square.ttf",
      "textAlignment": "center",
      "characterSize": 25,
      "color": {
        "b": 255,
        "g": 255,
        "r": 255
      }
    },
    {
      "assetStoreId": "26f7912e497fefccd32817a0c24533c9304633b47c6e556065dc498219877e81",
      "name": "Login",
      "tags": "",
      "type": "PanelSpriteButton::PanelSpriteButton",
      "variables": [],
      "effects": [],
      "behaviors": [],
      "content": {
        "LeftPadding": 0,
        "RightPadding": 0,
        "PressedLabelOffsetY": 1,
        "BottomPadding": 0,
        "TopPadding": 0,
        "HoveredFadeOutDuration": 0.2
      },
      "childrenContent": {
        "Hovered": {
          "bottomMargin": 6,
          "height": 64,
          "leftMargin": 6,
          "rightMargin": 6,
          "texture": "assets\\On Screen Controls Button_Hovered.png",
          "tiled": false,
          "topMargin": 6,
          "width": 192
        },
        "Idle": {
          "bottomMargin": 6,
          "height": 64,
          "leftMargin": 6,
          "rightMargin": 6,
          "texture": "assets\\On Screen Controls Button_Idle.png",
          "tiled": false,
          "topMargin": 6,
          "width": 192
        },
        "Label": {
          "bold": false,
          "italic": false,
          "smoothed": true,
          "underlined": false,
          "string": "Login",
          "font": "Kenney Mini Square.ttf",
          "textAlignment": "center",
          "characterSize": 32,
          "color": {
            "b": 255,
            "g": 255,
            "r": 255
          }
        },
        "Pressed": {
          "bottomMargin": 6,
          "height": 64,
          "leftMargin": 6,
          "rightMargin": 6,
          "texture": "assets\\On Screen Controls Button_Pressed.png",
          "tiled": false,
          "topMargin": 6,
          "width": 192
        }
      }
    },
    {
      "assetStoreId": "26f7912e497fefccd32817a0c24533c9304633b47c6e556065dc498219877e81",
      "name": "Guest",
      "tags": "",
      "type": "PanelSpriteButton::PanelSpriteButton",
      "variables": [],
      "effects": [],
      "behaviors": [],
      "content": {
        "LeftPadding": 0,
        "RightPadding": 0,
        "PressedLabelOffsetY": 1,
        "BottomPadding": 0,
        "TopPadding": 0,
        "HoveredFadeOutDuration": 0.2
      },
      "childrenContent": {
        "Hovered": {
          "bottomMargin": 6,
          "height": 64,
          "leftMargin": 6,
          "rightMargin": 6,
          "texture": "assets\\On Screen Controls Button_Hovered.png",
          "tiled": false,
          "topMargin": 6,
          "width": 192
        },
        "Idle": {
          "bottomMargin": 6,
          "height": 64,
          "leftMargin": 6,
          "rightMargin": 6,
          "texture": "assets\\On Screen Controls Button_Idle.png",
          "tiled": false,
          "topMargin": 6,
          "width": 192
        },
        "Label": {
          "bold": false,
          "italic": false,
          "smoothed": true,
          "underlined": false,
          "string": "Guest",
          "font": "Kenney Mini Square.ttf",
          "textAlignment": "center",
          "characterSize": 32,
          "color": {
            "b": 255,
            "g": 255,
            "r": 255
          }
        },
        "Pressed": {
          "bottomMargin": 6,
          "height": 64,
          "leftMargin": 6,
          "rightMargin": 6,
          "texture": "assets\\On Screen Controls Button_Pressed.png",
          "tiled": false,
          "topMargin": 6,
          "width": 192
        }
      }
    },
    {
      "assetStoreId": "26f7912e497fefccd32817a0c24533c9304633b47c6e556065dc498219877e81",
      "name": "DontRemoveOrAdd",
      "tags": "",
      "type": "PanelSpriteButton::PanelSpriteButton",
      "variables": [],
      "effects": [],
      "behaviors": [],
      "content": {
        "LeftPadding": 0,
        "RightPadding": 0,
        "PressedLabelOffsetY": 1,
        "BottomPadding": 0,
        "TopPadding": 0,
        "HoveredFadeOutDuration": 0.2
      },
      "childrenContent": {
        "Hovered": {
          "bottomMargin": 6,
          "height": 64,
          "leftMargin": 6,
          "rightMargin": 6,
          "texture": "On Screen Controls Button_Hovered.png",
          "tiled": false,
          "topMargin": 6,
          "width": 192
        },
        "Idle": {
          "bottomMargin": 6,
          "height": 64,
          "leftMargin": 6,
          "rightMargin": 6,
          "texture": "On Screen Controls Button_Idle.png",
          "tiled": false,
          "topMargin": 6,
          "width": 192
        },
        "Label": {
          "bold": false,
          "italic": false,
          "smoothed": true,
          "underlined": false,
          "string": "OK",
          "font": "Kenney Mini Square.ttf",
          "textAlignment": "center",
          "characterSize": 32,
          "color": {
            "b": 255,
            "g": 255,
            "r": 255
          }
        },
        "Pressed": {
          "bottomMargin": 6,
          "height": 64,
          "leftMargin": 6,
          "rightMargin": 6,
          "texture": "On Screen Controls Button_Pressed.png",
          "tiled": false,
          "topMargin": 6,
          "width": 192
        }
      }
    },
    {
      "assetStoreId": "",
      "bold": false,
      "italic": true,
      "name": "LogOut",
      "smoothed": true,
      "tags": "",
      "type": "TextObject::Text",
      "underlined": false,
      "variables": [],
      "effects": [],
      "behaviors": [
        {
          "name": "Anchor",
          "type": "AnchorBehavior::AnchorBehavior",
          "bottomEdgeAnchor": 0,
          "leftEdgeAnchor": 2,
          "relativeToOriginalWindowSize": true,
          "rightEdgeAnchor": 0,
          "topEdgeAnchor": 2,
          "useLegacyBottomAndRightAnchors": false
        },
        {
          "name": "MultitouchButton",
          "type": "SpriteMultitouchJoystick::MultitouchButton",
          "ControllerIdentifier": 1,
          "ButtonIdentifier": "A",
          "TouchId": 0,
          "TouchIndex": 0,
          "IsReleased": false
        }
      ],
      "string": "LogOut",
      "font": "Kenney Mini Square.ttf",
      "textAlignment": "left",
      "characterSize": 16,
      "color": {
        "b": 70,
        "g": 70,
        "r": 70
      }
    },
    {
      "assetStoreId": "",
      "bold": true,
      "italic": false,
      "name": "showlb",
      "smoothed": true,
      "tags": "",
      "type": "TextObject::Text",
      "underlined": false,
      "variables": [],
      "effects": [],
      "behaviors": [
        {
          "name": "Anchor",
          "type": "AnchorBehavior::AnchorBehavior",
          "bottomEdgeAnchor": 0,
          "leftEdgeAnchor": 2,
          "relativeToOriginalWindowSize": true,
          "rightEdgeAnchor": 0,
          "topEdgeAnchor": 2,
          "useLegacyBottomAndRightAnchors": false
        }
      ],
      "string": "Show Leaderboards",
      "font": "Kenney Mini Square.ttf",
      "textAlignment": "left",
      "characterSize": 24,
      "color": {
        "b": 255,
        "g": 255,
        "r": 255
      }
    },
    {
      "assetStoreId": "",
      "bold": true,
      "italic": false,
      "name": "uploadscore",
      "smoothed": true,
      "tags": "",
      "type": "TextObject::Text",
      "underlined": false,
      "variables": [],
      "effects": [],
      "behaviors": [
        {
          "name": "Anchor",
          "type": "AnchorBehavior::AnchorBehavior",
          "bottomEdgeAnchor": 0,
          "leftEdgeAnchor": 2,
          "relativeToOriginalWindowSize": true,
          "rightEdgeAnchor": 0,
          "topEdgeAnchor": 2,
          "useLegacyBottomAndRightAnchors": false
        }
      ],
      "string": "Upload Score",
      "font": "Kenney Mini Square.ttf",
      "textAlignment": "left",
      "characterSize": 24,
      "color": {
        "b": 255,
        "g": 255,
        "r": 255
      }
    },
    {
      "assetStoreId": "",
      "bold": false,
      "italic": false,
      "name": "popupstuff",
      "smoothed": true,
      "tags": "",
      "type": "TextObject::Text",
      "underlined": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "string": "Text",
      "font": "Kenney Mini Square.ttf",
      "textAlignment": "left",
      "characterSize": 20,
      "color": {
        "b": 141,
        "g": 141,
        "r": 141
      }
    },
    {
      "assetStoreId": "",
      "name": "GuestName",
      "tags": "",
      "type": "TextInput::TextInputObject",
      "variables": [],
      "effects": [],
      "behaviors": [],
      "content": {
        "initialValue": "",
        "placeholder": "Type in your username...",
        "fontResourceName": "Roboto-Regular.ttf",
        "fontSize": 12,
        "inputType": "text",
        "textColor": "0;0;0",
        "fillColor": "39;39;39",
        "fillOpacity": 255,
        "borderColor": "0;0;0",
        "borderOpacity": 255,
        "borderWidth": 1,
        "readOnly": false,
        "disabled": false
      }
    },
    {
      "assetStoreId": "",
      "bold": false,
      "italic": false,
      "name": "GuestText",
      "smoothed": true,
      "tags": "",
      "type": "TextObject::Text",
      "underlined": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "string": "-- GUEST --",
      "font": "Roboto-Regular.ttf",
      "textAlignment": "left",
      "characterSize": 32,
      "color": {
        "b": 255,
        "g": 255,
        "r": 255
      }
    },
    {
      "assetStoreId": "",
      "bold": false,
      "italic": false,
      "name": "Username",
      "smoothed": true,
      "tags": "",
      "type": "TextObject::Text",
      "underlined": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "string": "Username:",
      "font": "Roboto-Regular.ttf",
      "textAlignment": "center",
      "characterSize": 32,
      "color": {
        "b": 255,
        "g": 255,
        "r": 255
      }
    },
    {
      "assetStoreId": "",
      "bold": false,
      "italic": false,
      "name": "Scores",
      "smoothed": true,
      "tags": "",
      "type": "TextObject::Text",
      "underlined": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "string": "Score: ",
      "font": "Roboto-Regular.ttf",
      "textAlignment": "center",
      "characterSize": 25,
      "color": {
        "b": 0,
        "g": 0,
        "r": 0
      }
    }
  ],
  "events": [
    {
      "type": "BuiltinCommonInstructions::Comment",
      "color": {
        "b": 109,
        "g": 230,
        "r": 255,
        "textB": 0,
        "textG": 0,
        "textR": 0
      },
      "comment": "set `leaderboards` in the global variables section to be the id of the leaderboard, default value is the leaderboard \"Level1Scores\"\nset `uploadscore` in global variables section to be the score from level which the player was on( if player lost on level 1 and his score was 53, then set `uploadscore' to be the score which is 53)"
    },
    {
      "colorB": 228,
      "colorG": 176,
      "colorR": 74,
      "creationTime": 0,
      "folded": true,
      "name": "authentication",
      "source": "",
      "type": "BuiltinCommonInstructions::Group",
      "events": [
        {
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "authentication stuff, if guest, then give a random username"
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": true,
                "value": "PlayerAuthentication::IsPlayerAuthenticated"
              },
              "parameters": []
            }
          ],
          "actions": [],
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "PanelSpriteButton::PanelSpriteButton::IsPressed"
                  },
                  "parameters": [
                    "Login",
                    ""
                  ]
                },
                {
                  "type": {
                    "value": "BuiltinCommonInstructions::Once"
                  },
                  "parameters": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "PlayerAuthentication::OpenAuthenticationWindow"
                  },
                  "parameters": [
                    ""
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "PanelSpriteButton::PanelSpriteButton::IsPressed"
                  },
                  "parameters": [
                    "Guest",
                    ""
                  ]
                },
                {
                  "type": {
                    "value": "BuiltinCommonInstructions::Once"
                  },
                  "parameters": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "HideLayer"
                  },
                  "parameters": [
                    "",
                    "\"PrompLayer\""
                  ]
                },
                {
                  "type": {
                    "value": "ModVarSceneTxt"
                  },
                  "parameters": [
                    "username",
                    "=",
                    "\"Guest\" + ToString(Random(99999))"
                  ]
                },
                {
                  "type": {
                    "value": "EcrireFichierTxt"
                  },
                  "parameters": [
                    "\"username\"",
                    "\"guest\"",
                    "VariableString(username)"
                  ]
                },
                {
                  "type": {
                    "value": "ShowLayer"
                  },
                  "parameters": [
                    "",
                    ""
                  ]
                }
              ]
            }
          ]
        },
        {
          "disabled": true,
          "folded": true,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "PanelSpriteButton::PanelSpriteButton::IsPressed"
              },
              "parameters": [
                "DontRemoveOrAdd",
                ""
              ]
            },
            {
              "type": {
                "value": "BuiltinCommonInstructions::Once"
              },
              "parameters": []
            }
          ],
          "actions": [],
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "TextInput::TextInputObject::Text"
                  },
                  "parameters": [
                    "GuestName",
                    "!=",
                    "\"\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarSceneTxt"
                  },
                  "parameters": [
                    "username",
                    "=",
                    "GuestName.Text()"
                  ]
                },
                {
                  "type": {
                    "value": "EcrireFichierTxt"
                  },
                  "parameters": [
                    "\"username\"",
                    "\"guest\"",
                    "GuestName.Text()"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "HideLayer"
                  },
                  "parameters": [
                    "",
                    "\"guestInfoLayerNOTUSEDANYMORE\""
                  ]
                },
                {
                  "type": {
                    "value": "ShowLayer"
                  },
                  "parameters": [
                    "",
                    ""
                  ]
                }
              ]
            }
          ]
        }
      ],
      "parameters": []
    },
    {
      "colorB": 228,
      "colorG": 176,
      "colorR": 74,
      "creationTime": 0,
      "folded": true,
      "name": "logout",
      "source": "",
      "type": "BuiltinCommonInstructions::Group",
      "events": [
        {
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "just visuals and then logic when `log out` is pressed"
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "SourisSurObjet"
              },
              "parameters": [
                "LogOut",
                "",
                "",
                ""
              ]
            },
            {
              "type": {
                "inverted": true,
                "value": "SpriteMultitouchJoystick::MultitouchButton::IsPressed"
              },
              "parameters": [
                "LogOut",
                "MultitouchButton",
                ""
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "TextObject::ChangeColor"
              },
              "parameters": [
                "LogOut",
                "\"60;60;60\""
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "SpriteMultitouchJoystick::MultitouchButton::IsPressed"
              },
              "parameters": [
                "LogOut",
                "MultitouchButton",
                ""
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "TextObject::ChangeColor"
              },
              "parameters": [
                "LogOut",
                "\"85;85;85\""
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": true,
                "value": "SourisSurObjet"
              },
              "parameters": [
                "LogOut",
                "",
                "",
                ""
              ]
            },
            {
              "type": {
                "inverted": true,
                "value": "SpriteMultitouchJoystick::MultitouchButton::IsPressed"
              },
              "parameters": [
                "LogOut",
                "MultitouchButton",
                ""
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "TextObject::ChangeColor"
              },
              "parameters": [
                "LogOut",
                "\"70;70;70\""
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "logout or remove the guest saved in storage"
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "SpriteMultitouchJoystick::MultitouchButton::IsPressed"
              },
              "parameters": [
                "LogOut",
                "MultitouchButton",
                ""
              ]
            },
            {
              "type": {
                "value": "BuiltinCommonInstructions::Once"
              },
              "parameters": []
            }
          ],
          "actions": [
            {
              "type": {
                "value": "Scene"
              },
              "parameters": [
                "",
                "\"leaderboards\"",
                ""
              ]
            }
          ],
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "PlayerAuthentication::IsPlayerAuthenticated"
                  },
                  "parameters": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "PlayerAuthentication::LogOut"
                  },
                  "parameters": [
                    ""
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "GroupExists"
                  },
                  "parameters": [
                    "\"username\"",
                    "\"guest\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "DeleteGroupFichier"
                  },
                  "parameters": [
                    "\"username\"",
                    "\"guest\""
                  ]
                }
              ]
            }
          ]
        }
      ],
      "parameters": []
    },
    {
      "colorB": 228,
      "colorG": 176,
      "colorR": 74,
      "creationTime": 0,
      "folded": true,
      "name": "Logged In UI",
      "source": "",
      "type": "BuiltinCommonInstructions::Group",
      "events": [
        {
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "display the logged in name if authenticated, else, get the guest data from the storage and display guest name"
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "BuiltinCommonInstructions::Or"
              },
              "parameters": [],
              "subInstructions": [
                {
                  "type": {
                    "value": "PlayerAuthentication::HasPlayerLoggedIn"
                  },
                  "parameters": []
                },
                {
                  "type": {
                    "value": "BuiltinCommonInstructions::And"
                  },
                  "parameters": [],
                  "subInstructions": [
                    {
                      "type": {
                        "value": "PlayerAuthentication::IsPlayerAuthenticated"
                      },
                      "parameters": []
                    },
                    {
                      "type": {
                        "value": "DepartScene"
                      },
                      "parameters": [
                        ""
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": {
                "value": "BuiltinCommonInstructions::Once"
              },
              "parameters": []
            }
          ],
          "actions": [
            {
              "type": {
                "value": "HideLayer"
              },
              "parameters": [
                "",
                "\"PrompLayer\""
              ]
            },
            {
              "type": {
                "value": "ModVarSceneTxt"
              },
              "parameters": [
                "username",
                "=",
                "PlayerAuthentication::Username()"
              ]
            },
            {
              "type": {
                "value": "ShowLayer"
              },
              "parameters": [
                "",
                ""
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "GroupExists"
              },
              "parameters": [
                "\"username\"",
                "\"guest\""
              ]
            },
            {
              "type": {
                "value": "DepartScene"
              },
              "parameters": [
                ""
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "HideLayer"
              },
              "parameters": [
                "",
                "\"PrompLayer\""
              ]
            },
            {
              "type": {
                "value": "LireFichierTxt"
              },
              "parameters": [
                "\"username\"",
                "\"guest\"",
                "PlayerAuthentication::Username()",
                "username"
              ]
            },
            {
              "type": {
                "value": "ShowLayer"
              },
              "parameters": [
                "",
                ""
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [
            {
              "type": {
                "value": "TextObject::String"
              },
              "parameters": [
                "Username",
                "=",
                "\"Username: \" + VariableString(username)"
              ]
            }
          ]
        }
      ],
      "parameters": []
    },
    {
      "colorB": 228,
      "colorG": 176,
      "colorR": 74,
      "creationTime": 0,
      "disabled": true,
      "folded": true,
      "name": "guest UI",
      "source": "",
      "type": "BuiltinCommonInstructions::Group",
      "events": [
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "TextInput::TextInputObject::Text"
              },
              "parameters": [
                "GuestName",
                "=",
                "\"\""
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "PanelSpriteButton::PanelSpriteButton::Activate"
              },
              "parameters": [
                "DontRemoveOrAdd",
                "no",
                ""
              ]
            },
            {
              "type": {
                "value": "PanelSpriteButton::PanelSpriteButton::SetOpacity"
              },
              "parameters": [
                "DontRemoveOrAdd",
                "=",
                "150"
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "TextInput::TextInputObject::Text"
              },
              "parameters": [
                "GuestName",
                "!=",
                "\"\""
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "PanelSpriteButton::PanelSpriteButton::Activate"
              },
              "parameters": [
                "DontRemoveOrAdd",
                "yes",
                ""
              ]
            },
            {
              "type": {
                "value": "PanelSpriteButton::PanelSpriteButton::SetOpacity"
              },
              "parameters": [
                "DontRemoveOrAdd",
                "=",
                "255"
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [],
          "actions": [
            {
              "type": {
                "value": "TextInput::TextInputObject::SetText"
              },
              "parameters": [
                "GuestName",
                "=",
                "SubStr(GuestName.Text(), 0, 12)"
              ]
            },
            {
              "type": {
                "value": "TextInput::TextInputObject::SetText"
              },
              "parameters": [
                "GuestName",
                "=",
                "InputValidation::ToAlphanumerical(GuestName.Text())"
              ]
            }
          ]
        }
      ],
      "parameters": []
    },
    {
      "colorB": 228,
      "colorG": 176,
      "colorR": 74,
      "creationTime": 0,
      "folded": true,
      "name": "leaderboards",
      "source": "",
      "type": "BuiltinCommonInstructions::Group",
      "events": [
        {
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "display leaderboards"
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "MouseButtonPressed"
              },
              "parameters": [
                "showlb",
                "Left"
              ]
            },
            {
              "type": {
                "value": "SourisSurObjet"
              },
              "parameters": [
                "showlb",
                "1",
                "\"b\"",
                ""
              ]
            },
            {
              "type": {
                "value": "BuiltinCommonInstructions::Once"
              },
              "parameters": []
            }
          ],
          "actions": [
            {
              "type": {
                "value": "Leaderboards::DisplayLeaderboard"
              },
              "parameters": [
                "",
                "GlobalVariableString(leaderboard)",
                "yes"
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "check if uploadscore is pressed, then check if he is authenticated, if true, upload the score which is global variable `uploadscore` with the player name of the authenticated player to leaderboard id: global variable `leaderboard` default value is leaderboard \"Level1Score\"\n\nif the player is guest then upload the score which is global variable `uploadscore` with the player name name from variable `username` to leaderboard id: global variable "
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "MouseButtonPressed"
              },
              "parameters": [
                "showlb",
                "Left"
              ]
            },
            {
              "type": {
                "value": "SourisSurObjet"
              },
              "parameters": [
                "uploadscore",
                "1",
                "\"b\"",
                ""
              ]
            },
            {
              "type": {
                "inverted": true,
                "value": "Leaderboards::IsSaving"
              },
              "parameters": [
                ""
              ]
            },
            {
              "type": {
                "value": "BuiltinCommonInstructions::Once"
              },
              "parameters": []
            }
          ],
          "actions": [],
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "GroupExists"
                  },
                  "parameters": [
                    "\"username\"",
                    "\"guest\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "await": true,
                    "value": "Leaderboards::SavePlayerScore"
                  },
                  "parameters": [
                    "",
                    "GlobalVariableString(leaderboard)",
                    "GlobalVariable(uploadScore)",
                    "VariableString(username)"
                  ]
                }
              ],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "Leaderboards::DisplayLeaderboard"
                      },
                      "parameters": [
                        "",
                        "GlobalVariableString(leaderboard)",
                        "yes"
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "PlayerAuthentication::IsPlayerAuthenticated"
                  },
                  "parameters": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "Leaderboards::SaveConnectedPlayerScore"
                  },
                  "parameters": [
                    "",
                    "GlobalVariableString(leaderboard)",
                    "GlobalVariable(uploadScore)"
                  ]
                }
              ],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "Leaderboards::DisplayLeaderboard"
                      },
                      "parameters": [
                        "",
                        "GlobalVariableString(leaderboard)",
                        "yes"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "parameters": []
    },
    {
      "type": "BuiltinCommonInstructions::Standard",
      "conditions": [],
      "actions": []
    }
  ],
  "layers": [
    {
      "ambientLightColorB": 200,
      "ambientLightColorG": 200,
      "ambientLightColorR": 200,
      "camera3DFarPlaneDistance": 10000,
      "camera3DFieldOfView": 45,
      "camera3DNearPlaneDistance": 0.1,
      "followBaseLayerCamera": false,
      "isLightingLayer": false,
      "isLocked": false,
      "name": "",
      "renderingType": "",
      "visibility": false,
      "cameras": [
        {
          "defaultSize": true,
          "defaultViewport": true,
          "height": 0,
          "viewportBottom": 1,
          "viewportLeft": 0,
          "viewportRight": 1,
          "viewportTop": 0,
          "width": 0
        }
      ],
      "effects": []
    },
    {
      "ambientLightColorB": 200,
      "ambientLightColorG": 200,
      "ambientLightColorR": 200,
      "camera3DFarPlaneDistance": 10000,
      "camera3DFieldOfView": 45,
      "camera3DNearPlaneDistance": 0.1,
      "followBaseLayerCamera": false,
      "isLightingLayer": false,
      "isLocked": false,
      "name": "PrompLayer",
      "renderingType": "",
      "visibility": true,
      "cameras": [],
      "effects": []
    },
    {
      "ambientLightColorB": 200,
      "ambientLightColorG": 200,
      "ambientLightColorR": 200,
      "camera3DFarPlaneDistance": 10000,
      "camera3DFieldOfView": 45,
      "camera3DNearPlaneDistance": 0.1,
      "followBaseLayerCamera": false,
      "isLightingLayer": false,
      "isLocked": false,
      "name": "guestInfoLayerNOTUSEDANYMORE",
      "renderingType": "",
      "visibility": false,
      "cameras": [],
      "effects": []
    }
  ],
  "behaviorsSharedData": [
    {
      "name": "Anchor",
      "type": "AnchorBehavior::AnchorBehavior"
    },
    {
      "name": "MultitouchButton",
      "type": "SpriteMultitouchJoystick::MultitouchButton"
    },
    {
      "name": "dev_debugBehavior",
      "type": "dev_debugBehavior::dev_debugBehavior"
    }
  ]
}